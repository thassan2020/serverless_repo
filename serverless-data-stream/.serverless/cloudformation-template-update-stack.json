{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "S3BucketForKinesisDestination": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "iot-serverless-tarek-7-test-kinesis-destination",
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      }
    },
    "KinesisDeliveryRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "iot-serverless-tarek-7-test-kinesis-delivery-role",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": {
                    "Ref": "AWS::AccountId"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "KinesisDeliveryToS3Policy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "iot-serverless-tarek-7-test-kinesis-delivery-to-s3-policy",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::iot-serverless-tarek-7-test-kinesis-destination"
                },
                {
                  "Fn::Sub": "arn:aws:s3:::iot-serverless-tarek-7-test-kinesis-destination*"
                }
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "KinesisDeliveryRole"
          }
        ]
      }
    },
    "KinesisDeliveryStream": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamName": "iot-serverless-tarek-7-test-kinesis-delivery-stream",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::Sub": "arn:aws:s3:::iot-serverless-tarek-7-test-kinesis-destination"
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 3
          },
          "CompressionFormat": "UNCOMPRESSED",
          "Prefix": "firehose/",
          "RoleARN": {
            "Fn::GetAtt": [
              "KinesisDeliveryRole",
              "Arn"
            ]
          }
        }
      }
    },
    "IoTCoreRuleSendingToKinesis": {
      "Type": "AWS::IoT::TopicRule",
      "Properties": {
        "RuleName": "iot_serverless_test_send_to_kinesis_rule_3",
        "TopicRulePayload": {
          "Actions": [
            {
              "Firehose": {
                "DeliveryStreamName": {
                  "Ref": "KinesisDeliveryStream"
                },
                "RoleArn": {
                  "Fn::GetAtt": [
                    "KinesisRuleRole",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "RuleDisabled": false,
          "Sql": {
            "Fn::Sub": "SELECT * topic(3) as clientid FROM '$aws/things/+/shadow/name/+/update/+'"
          }
        }
      }
    },
    "KinesisRuleRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "iot-serverless-tarek-7_test_sending_to_kinesis_role",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "iot.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "firehose:PutRecord",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "KinesisDeliveryStream",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            },
            "PolicyName": "iot-serverless-tarek-7_test_sending_to_kinesis_policy"
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-iot-serverless-tarek-7-test-ServerlessDeploymentBucketName"
      }
    },
    "S3BucketForKinesisDestinationName": {
      "Value": {
        "Ref": "S3BucketForKinesisDestination"
      }
    }
  }
}